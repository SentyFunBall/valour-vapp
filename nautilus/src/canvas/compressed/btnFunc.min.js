const electron=require("electron");const path=require("path");const fs=require("fs");const{type:type}=require("os");const dialog=electron.remote.dialog;const prompt=require("electron-prompt");const home=()=>{const options={type:"warning",buttons:["Cancel","Yes"],defaultId:2,title:"Warning",message:"Are you sure you want to go back home?",detail:"All unsaved progress will be lost!"};dialog.showMessageBox(null,options).then(data=>{console.log(data.response);if(data.response==1){window.location.href="./start.html"}})};const run=()=>{try{eval(Blockly.JavaScript.workspaceToCode(workspace))}catch(e){console_print(e)}};const save=()=>{dialog.showSaveDialog({title:"Save as",defaultPath:path.join(__dirname,"../workspace/"),buttonLabel:"Save",filters:[{name:"xml",extensions:["xml"]}],properties:[]}).then(file=>{if(!file.canceled){fs.writeFile(file.filePath.toString(),Blockly.JavaScript.workspaceToCode(workspace),function(err){if(err)throw err});const xml_text=Blockly.Xml.domToPrettyText(Blockly.Xml.workspaceToDom(workspace));fs.writeFile(file.filePath.toString(),xml_text,function(err){if(err)throw err})}}).catch(err=>{})};const loadfiles=()=>{dialog.showOpenDialog({properties:["openFile"]}).then(function(response){if(!response.canceled){const xml=fs.readFileSync(response.filePaths[0]).toString();if(xml.startsWith("<xml")&&xml.endsWith("</xml>")){Blockly.Xml.appendDomToWorkspace(Blockly.Xml.textToDom(xml),workspace)}else{}}else{}})};const createVar=()=>{prompt({title:"New variable",label:"Name:",value:"My Variable",type:"input"}).then(r=>{if(r===null){}else{workspace.createVariable(r)}}).catch(console.error)};const exportProject=()=>{dialog.showSaveDialog({title:"Save as",defaultPath:__dirname,buttonLabel:"Save",filters:[{name:"finished project",extensions:["html"]}],properties:[]}).then(file=>{if(!file.canceled){const all_code=`
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <button onclick="start()"> start code </button>
  <button onclick="end()"> stop code </button>
  <!-- if you are going to use this with something else copy between the two // -->
  <script>
  var canRun = false;
  const start = () => {
    canRun = true;
  }
  const end = () => {
    canRun = false;
  }

  if (canRun){
//from here \\/
  ${Blockly.JavaScript.workspaceToCode(workspace)}
//until here /\\  
}
  
  </script>
</body>
</html>
`;fs.writeFile(file.filePath.toString(),all_code,function(err){if(err)throw err});const xml_text=Blockly.Xml.domToPrettyText(Blockly.Xml.workspaceToDom(workspace));fs.writeFile(file.filePath.toString(),xml_text,function(err){if(err)throw err})}}).catch(err=>{})};